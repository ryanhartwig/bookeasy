type BusinessPrefs {
  minBookingNotice: Int @default(value: 86400000),
  minCancelNotice: Int @default(value: 86400000),
  maxBookAhead: Int @default(value: 2592000000),
}

type Business @model {
  name: String!,
  email: String,
  phone: String,
  prefs: BusinessPrefs!,
  users: [User!]!,
}

type UserPrefs {
  privatePhoto: Boolean! @default(value: false),
  privateEmail: Boolean! @default(value: true),
  privatePhone: Boolean! @default(value: true),
  notificationBooking: Boolean! @default(value: true),
  notificationReminder: Boolean! @default(value: true),
  notificationOverview: Boolean! @default(value: false),
  notificationOverviewTime: String,
}

type User @model {
  name: String!,
  email: String! @unique,
  phone: String,
  businesses: [Business!]! @relation(name: "user_teams"),
  ownBusiness: Business @relation(name: "user_own_business"),
  prefs: UserPrefs!,  
  assignedClients: [Client!]!,
  notifications: [Notification!]!,
  services: [Service!]!,
  appointments: [Appointment!]!,
  availability: [BaseAvailability!]!,
}

type Notification @model {
  user: User!,
  text: String!,
  link: String,
  seen: Boolean @default(value: false),
}

type Client @model {
  business: Business! @relation(name: "client_business"),
  name: String!,
  email: String! @unique,
  notes: String,
  address: String,
  phone: String,
  active: Boolean @default(value: true),
  assignedUsers: [User!]!
}

type Service @model {
  business: Business! @relation(name: "service_business"),
  name: String!,
  duration: Int!,
  provider: String!,
  cost: Int!,
  isVideo: Boolean!,
  color: String!,
  assignedUsers: [User!]!,
}

type Appointment @model {
  user: User! @relation(name: "app_user"),
  business: Business! @relation(name: "app_business"),
  client: Client! @relation(name: "app_client"),
  service: Service! @relation(name: "app_service"),
  startDate: String!,
  endDate: String!,
  serviceName: String!,
  serviceDuration: Int!,
  serviceProvider: String!,
  serviceCost: Int!,
  isVideo: Boolean!,
  isPaid: Boolean! @default(value: false),
}

type AvailabilitySlice {
  day: Int!,
  start: String!,
  end: String!,
}

type TimeOff @model {
  startPeriod: Int!,
  endPeriod: Int!,
  reason: String!,
}

type BaseAvailability @model {
  user: User! @relation(name: "base_avail_user"),
  business: Business! @relation(name: "base_avail_business"),
  slices: [AvailabilitySlice!]!,
  timeOff: [TimeOff!]! @relation(name: "base_avail_time_off"),
}


# christina bronson: user_01GWHJK2PJ3C1DGYJY32YSJFQ3
# john greenwood: user_01GWJ9XXHTZGAJJ28DZ47BEBQP
# phillip west: user_01GWJ9XXHTZGAJJ28DZ47BEBQQ
# marly johsnon: user_01GWJ9XXHTZGAJJ28DZ47BEBQR

# own business id (chrstina bronson)
# business_01GWHNAX5BM0Q7K2GVS5YVJBKC

# johnson team id
# business_01GWJ9XXHTZGAJJ28DZ47BEBQN

# steven price: client_01GWJEJWN2053A8HJSX4HGFJX5
# alexander stewart: client_01GWJEP84FDSE3TKDBK6656S8C
# samuel cooper: client_01GWJET8ERJ7PJYXZK6QVHFX5W
# ethan blackwood: client_01GWJERVBTMTQRXX5VG6CWZ3HW
# emilie gray: client_01GWJEQKW2ZBVS3N2PZRE0PV85

# init consult: service_01GWJFHH8PQKE5QG8REM8KT90N
# full consult: service_01GWJFK2RHYKTE4YRXWZNVD441
# review meeting: service_01GWJFKVPW1M4JFESKNZV1AJ65

# users, businesses, linked