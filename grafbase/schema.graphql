type BusinessPrefs {
  minBookingNotice: Int @default(value: 86400000),
  minCancelNotice: Int @default(value: 86400000),
  maxBookAhead: Int @default(value: 2592000000),
}

type Business @model {
  name: String!,
  email: String,
  phone: String,
  prefs: BusinessPrefs!,
}

type BusinessRelation {
  business: Business!,
  elevated: Boolean!,
}

type UserPrefs {
  privatePhoto: Boolean! @default(value: false),
  privateEmail: Boolean! @default(value: true),
  privatePhone: Boolean! @default(value: true),
  notificationBooking: Boolean! @default(value: true),
  notificationReminder: Boolean! @default(value: true),
  notificationOverview: Boolean! @default(value: false),
  notificationOverviewTime: String,
}

type User @model {
  name: String!,
  email: String!,
  phone: String,
  businesses: [BusinessRelation]!,
  ownBusiness: Business @relation(name: "user_business"),
  prefs: UserPrefs!,
}

type Notification @model {
  user: User!,
  text: String!,
  link: String,
  seen: Boolean @default(value: false),
}

type Client @model {
  business: Business! @relation(name: "client_business"),
  name: String!,
  email: String!,
  notes: String,
  address: String,
  phone: String,
  active: Boolean @default(value: true),
  assignedUsers: [User]!
}

type Service @model {
  business: Business! @relation(name: "service_business"),
  name: String!,
  duration: Int!,
  provider: String!,
  cost: Int!,
  isVideo: Boolean!,
  color: String!,
  assignedUsers: [User]!,
}

type Appointment @model {
  user: User! @relation(name: "app_user"),
  business: Business! @relation(name: "app_business"),
  client: Client! @relation(name: "app_client"),
  service: Service! @relation(name: "app_service"),
  startDate: Int!,
  endDate: Int!,
  serviceName: String!,
  serviceDuration: Int!,
  serviceProvider: String!,
  serviceCost: Int!,
  isVideo: Boolean!,
  isPaid: Boolean! @default(value: false),
}

type AvailabilitySlice @model {
  user: User! @relation(name: "avail_user"),
  business: Business! @relation(name: "avail_business"),
  day: Int!,
  start: String!,
  end: String!,
}

type TimeOff @model {
  startPeriod: Int!,
  endPeriod: Int!,
  reason: String!,
}

type BaseAvailability @model {
  user: User! @relation(name: "base_avail_user"),
  business: Business! @relation(name: "base_avail_business"),
  slices: [AvailabilitySlice]! @relation(name: "base_avail_slices"),
  timeOff: [TimeOff]! @relation(name: "base_avail_time_off"),
}